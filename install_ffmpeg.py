#!/usr/bin/env python3
"""
Script d'aide √† l'installation de FFmpeg pour Ma√Ætre Joueur.
Ce script d√©tecte le syst√®me d'exploitation et fournit des instructions d'installation.
"""

import platform
import subprocess
import sys
import shutil
from pathlib import Path


def check_ffmpeg():
    """V√©rifie si FFmpeg est d√©j√† install√©."""
    try:
        result = subprocess.run(["ffmpeg", "-version"], capture_output=True, text=True, timeout=10)
        if result.returncode == 0:
            version_line = result.stdout.split('\n')[0]
            print(f"‚úÖ FFmpeg est d√©j√† install√© : {version_line}")
            return True
    except (subprocess.TimeoutExpired, FileNotFoundError, subprocess.SubprocessError):
        pass
    
    print("‚ùå FFmpeg n'est pas install√© ou n'est pas dans le PATH")
    return False


def get_installation_instructions():
    """Retourne les instructions d'installation selon le syst√®me d'exploitation."""
    system = platform.system().lower()
    
    if system == "darwin":  # macOS
        return {
            "system": "macOS",
            "methods": [
                {
                    "name": "Homebrew (recommand√©)",
                    "commands": [
                        "# Installer Homebrew si pas d√©j√† fait :",
                        '/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"',
                        "",
                        "# Installer FFmpeg :",
                        "brew install ffmpeg"
                    ],
                    "description": "M√©thode la plus simple sur macOS"
                },
                {
                    "name": "MacPorts",
                    "commands": [
                        "sudo port install ffmpeg"
                    ],
                    "description": "Alternative √† Homebrew"
                },
                {
                    "name": "T√©l√©chargement direct",
                    "commands": [
                        "# T√©l√©charger depuis : https://ffmpeg.org/download.html#build-mac",
                        "# Extraire et ajouter au PATH"
                    ],
                    "description": "Installation manuelle"
                }
            ]
        }
    
    elif system == "linux":
        return {
            "system": "Linux",
            "methods": [
                {
                    "name": "Ubuntu/Debian",
                    "commands": [
                        "sudo apt update",
                        "sudo apt install ffmpeg"
                    ],
                    "description": "Pour les distributions bas√©es sur Debian"
                },
                {
                    "name": "CentOS/RHEL/Fedora",
                    "commands": [
                        "# CentOS/RHEL :",
                        "sudo yum install ffmpeg",
                        "",
                        "# Fedora :",
                        "sudo dnf install ffmpeg"
                    ],
                    "description": "Pour les distributions Red Hat"
                },
                {
                    "name": "Arch Linux",
                    "commands": [
                        "sudo pacman -S ffmpeg"
                    ],
                    "description": "Pour Arch Linux"
                }
            ]
        }
    
    elif system == "windows":
        return {
            "system": "Windows",
            "methods": [
                {
                    "name": "Chocolatey (recommand√©)",
                    "commands": [
                        "# Installer Chocolatey si pas d√©j√† fait (en tant qu'administrateur) :",
                        'Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString("https://community.chocolatey.org/install.ps1"))',
                        "",
                        "# Installer FFmpeg :",
                        "choco install ffmpeg"
                    ],
                    "description": "Gestionnaire de paquets pour Windows"
                },
                {
                    "name": "Winget",
                    "commands": [
                        "winget install FFmpeg"
                    ],
                    "description": "Gestionnaire de paquets Microsoft"
                },
                {
                    "name": "T√©l√©chargement direct",
                    "commands": [
                        "# 1. T√©l√©charger depuis : https://ffmpeg.org/download.html#build-windows",
                        "# 2. Extraire dans C:\\ffmpeg",
                        "# 3. Ajouter C:\\ffmpeg\\bin au PATH syst√®me"
                    ],
                    "description": "Installation manuelle"
                }
            ]
        }
    
    else:
        return {
            "system": "Syst√®me non reconnu",
            "methods": [
                {
                    "name": "Installation g√©n√©rique",
                    "commands": [
                        "# Visitez https://ffmpeg.org/download.html",
                        "# T√©l√©chargez la version pour votre syst√®me",
                        "# Ajoutez FFmpeg √† votre PATH"
                    ],
                    "description": "Instructions g√©n√©riques"
                }
            ]
        }


def print_instructions():
    """Affiche les instructions d'installation."""
    print("üé¨ Installation de FFmpeg pour Ma√Ætre Joueur")
    print("=" * 50)
    
    if check_ffmpeg():
        print("\nüéâ FFmpeg est d√©j√† install√© ! Vous pouvez utiliser la compression automatique.")
        return
    
    instructions = get_installation_instructions()
    
    print(f"\nüì± Syst√®me d√©tect√© : {instructions['system']}")
    print("\nüìã Instructions d'installation :")
    
    for i, method in enumerate(instructions['methods'], 1):
        print(f"\n{i}. {method['name']}")
        print(f"   {method['description']}")
        print()
        for command in method['commands']:
            if command.startswith('#'):
                print(f"   {command}")
            else:
                print(f"   $ {command}")
    
    print("\n" + "=" * 50)
    print("üìù Notes importantes :")
    print("‚Ä¢ Red√©marrez votre terminal apr√®s l'installation")
    print("‚Ä¢ V√©rifiez l'installation avec : ffmpeg -version")
    print("‚Ä¢ Relancez Ma√Ætre Joueur pour activer la compression automatique")


def main():
    """Fonction principale."""
    try:
        print_instructions()
    except KeyboardInterrupt:
        print("\n\nüëã Installation annul√©e.")
        sys.exit(1)
    except Exception as e:
        print(f"\n‚ùå Erreur : {e}")
        sys.exit(1)


if __name__ == "__main__":
    main() 