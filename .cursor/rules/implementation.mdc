---
description: 
globs: 
alwaysApply: true
---
# Technical Implementation Guidelines

## Streamlit Best Practices
- Use st.cache_data for expensive operations
- Implement proper error handling with st.error()
- Use st.session_state for maintaining state
- Organize UI components in separate modules
- Use st.columns() for responsive layouts

## Database & Data Management
- Use SQLAlchemy ORM for database operations
- Implement proper database migrations
- Use UUID for primary keys
- Add proper indexes for query performance
- Implement soft deletes where appropriate

## AI Integration
- Handle API rate limits gracefully
- Implement retry logic for API calls
- Cache AI responses when possible
- Provide fallback options if AI services are unavailable
- Use structured prompts for consistent outputs

## File Management
- Store uploaded files in data/audio/ directory
- Implement file size and type validation
- Clean up temporary files after processing
- Use proper file naming conventions with timestamps

## Performance Considerations
- Implement caching for transcription results
- Use streaming for large file uploads
- Optimize database queries
- Implement pagination for large datasets
- Monitor memory usage for audio processing

## Testing
- Write unit tests for all services
- Use pytest for testing framework
- Mock external API calls in tests
- Test error conditions and edge cases
- Maintain test coverage above 80%
